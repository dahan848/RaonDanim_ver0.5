<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.raon.raondanim.dao.AccountsUserDAO">
	<insert id="setDnmmyData" parameterType="User">
	INSERT INTO USER_TB
			   (USER_NUM, USER_ID, USER_PW, USER_FNM, USER_LNM, USER_EMAIL_VERIFY , USER_REG_DATE)
		VALUES (
				USER_TB001_SEQ.nextval,
				#{user_id},
				#{user_pw},
				#{user_fnm},
				#{user_lnm},
				1,
				sysdate
				)
	</insert>
	<insert id="joinUser" parameterType="User">
		INSERT INTO USER_TB
			   (USER_NUM, USER_ID, USER_PW, USER_FNM, USER_LNM, USER_VERIFY_CODE, USER_REG_DATE)
		VALUES (
				USER_TB001_SEQ.nextval,
				#{user_id},
				#{user_pw},
				#{user_fnm},
				#{user_lnm},
				#{user_verify_code},
				sysdate
				)
	</insert>
	<select id="selectByUserId" resultType="User" parameterType="string">
		SELECT *
		  FROM user_tb
		 WHERE user_id = #{userid}
	</select>
	<select id="selectByUserNum" resultType="User" parameterType="string">
		SELECT *
		  FROM user_tb
		 WHERE user_num = #{usernum}
	</select>
	<update id="email_verify" parameterType="User">
		UPDATE user_tb
		   SET user_email_verify = 1
		 WHERE user_id = #{user_id}
		   AND user_verify_code = #{user_verify_code}
	</update>
	<update id="updatePersonal" parameterType="map">
		UPDATE user_tb
		
		   SET user_fnm 		= #{user_fnm},
		   	   user_lnm			= #{user_lnm},
		   	   user_gender 		= #{user_gender},
		   	   user_birth_date 	= #{user_birth_date}
		   	   
		 WHERE user_num 		= #{user_num}
	</update>
	<update id="passwordChange" parameterType="map">
		UPDATE user_tb
		
		   SET user_pw 		= #{new_user_pw1}
		   	   
		 WHERE user_num 	= #{user_num}
	</update>
	<select id="getUserInterest" parameterType="string" resultType="map">
		select *
		  from INTEREST_DTB
		 where INTEREST_NUM in (select INTEREST_NUM
                         		  from INTEREST_TB
                        		 where USER_NUM = #{usernum})
	</select>
	<select id="getUserLanguage" parameterType="string" resultType="map">
		select *
 		  from LANGUAGE_DTB
 		 where LANGUAGE_NUM in (select LANGUAGE_NUM
                         		  from LANGUAGE_TB
                       			 where USER_NUM = #{usernum})
	</select>
	<select id="getUserNationality" parameterType="string" resultType="string">
		select NATIONALITY_NAME
		  from NATIONALITY_DTB
		 where NATIONALITY_NUM = (select USER_NATIONALITY
                           			from user_tb
                          		   where user_num = #{usernum})
	</select>
	<select id="getUserGallery" parameterType="string" resultType="map">
		SELECT GALLERY_FILE_NUM, GALLERY_FILE_NAME, GALLERY_PIC_REG_DATE 
		  FROM GALLERY_TB
 		 WHERE user_num = #{usernum}
	</select>
	<select id="getHomeUserList" resultType="map">
		select user_num, user_profile_pic, user_lnm, user_fnm
  		  from user_tb
	</select>
	<update id="setProfilePic" parameterType="map">
		UPDATE user_tb
		   SET USER_PROFILE_PIC	= #{filename}
		 WHERE user_num 		= #{user_num}
	</update>
	<insert id="setGalleryPic" parameterType="map">
		INSERT INTO GALLERY_TB
			   (USER_NUM, GALLERY_FILE_NUM, GALLERY_FILE_NAME, GALLERY_PIC_REG_DATE)
		VALUES (
				#{user_num},
				GALLERY_TB_SEQ.nextval,
				#{filename},
				sysdate
				)
	</insert>
	<delete id="deleteGalleryPic" parameterType="string">
		delete 
	</delete>
	
	<!-- 대시보드 mapper 작성 - 조현길 -->
	<!-- 여행탭 여행 작성글 리스트 호출 -->
	<select id="trip_list" resultType="Map" parameterType="Map">
		select *
		from(
			select rownum as rnum, trip_board_title,trip_board_countent ,trip_writedate, trip_board_readcount, trip_board_key
			from(
				select * from TRIP_BOARD_TB
				where user_num = #{num}
				and trip_board_st = 0
				order by trip_board_key desc
			)
		)
		where rnum between #{firstRow} and #{endRow}
	</select>
	<!-- 토탈 카운트 -->
	<select id="selectTotalCount" resultType="int" parameterType="int">
		select count(*) from TRIP_BOARD_TB
		where user_num = #{num}
		and trip_board_st = 0
		
	</select>	
	<!-- 여행탭 여행 댓글 리스트 호출 -->
	<select id="trip_reply_list" parameterType="Map" resultType="Map">
		select *
		from(
			select rownum as rnum, trip_reply_content, trip_reply_writedate, trip_reply_key, trip_board_key, trip_board_st
			from(
				select reply.trip_reply_content, reply.trip_reply_writedate, reply.trip_reply_key, reply.trip_board_key , board.trip_board_st
				from TRIP_REPLY_TB reply, TRIP_BOARD_TB board
				where reply.trip_board_key = board.trip_board_key
				and reply.user_num = #{num}
				and reply.trip_reply_st = 0
				order by reply.trip_reply_key desc
				)
		)
		where rnum between #{firstRow} and #{endRow}
	</select>
	<!-- 댓글 토탈 카운트 -->
	<select id="selectReplyTotalCount" resultType="int" parameterType="int">
		select count(*) from TRIP_REPLY_TB
		where user_num = #{num}
		and trip_reply_st = 0
	</select>	
	<!-- 댓글 삭제 로직 -->
	<update id="deleteReply" parameterType="Map">
		update trip_reply_tb
			set trip_reply_st = 1
			where user_num = #{user_num}
			and trip_reply_key = #{replyNum}
	</update>
	
	<!-- 여행 삭제 로직 -->
	<update id="deleteTrip" parameterType="Map">
		update TRIP_BOARD_TB
			set trip_board_st = 1
			where user_num = #{user_num}
			and trip_board_key = #{boardNum}
	</update>
	
	<!-- 여행 후기 게시판 토탈 카운트 -->
	<select id="selectTripReviewTotalCount" resultType="int" parameterType="int">
		select count(*) from REVIEW_BOARD_TB
		where user_num = #{num}
		and RE_ST = 0
	</select>	
	<!-- 여행 후기 게시판 리스트 -->
	<select id="tripReview_review" resultType="Map" parameterType="Map">
		select *
		from(
			select rownum as rnum, review_num, rev_title, re_reg_date, re_count
			from(
				select * from REVIEW_BOARD_TB
				where user_num = #{num}
				and re_st = 0
				order by review_num desc
			)
		)
		where rnum between #{firstRow} and #{endRow}
	</select>
	
		<!-- 여행 후기 게시판 삭제 로직 -->
	<update id="deleteTripReview_review" parameterType="Map">
		update REVIEW_BOARD_TB
			set re_st = 1
			where user_num = #{user_num}
			and review_num = #{boardNum}
	</update>
	
		<!-- 여행후기 댓글 게시판 토탈 카운트 -->
	<select id="selectTripReview_ReplyTotalCount" resultType="int" parameterType="int">
		select count(*) from REVIEW_REPLY_TB
		where user_num = #{num}
		and RE_REPLY_ST = 0
	</select>	
	
	<!-- 여행 후기 댓글 게시판 리스트 -->
	<select id="tripReview_review_reply" resultType="Map" parameterType="Map">
		select *
		from(
			select rownum as rnum, re_reply_num, rev_rep_content, re_st, re_reply_date, review_num
			from(
				select reply.re_reply_num, reply.rev_rep_content, board.re_st, reply.re_reply_date, board.review_num
				from REVIEW_REPLY_TB reply, REVIEW_BOARD_TB board
				where reply.review_num = board.review_num
                and reply.user_num = #{num}
				and reply.re_reply_st = 0
				order by reply.re_reply_num desc
				)
		)
		where rnum between #{firstRow} and #{endRow}
	</select>
	
	<!-- 여행 후기 댓글 게시판 삭제 로직 -->
	<update id="deleteTripReview_review_reply" parameterType="Map">
		update REVIEW_REPLY_TB
			set re_reply_st = 1
			where user_num = #{user_num}
			and re_reply_num = #{boardNum}
	</update>
	
	
	
	
	
	
</mapper>